
==================== FINAL INTERFACE ====================
2017-03-15 23:55:05.36148021 UTC

interface goglm4z3-0.1.0.0-PpXcM9zhE76KpKQN4wcQN:Function [orphan module] 8002
  interface hash: f56fc669cb2b311f0d45313ecbd1db6d
  ABI hash: ef6a78a871bbf74dddcb46fb845d0928
  export-list hash: eecf87a4920bb8985c28a1984be03393
  orphan hash: c884b2849851d36c96ac0867cb0e2cda
  flag hash: 58b7eae34000edeef34a2d656d06cfe3
  sig of: Nothing
  used TH splices: False
  where
exports:
  Function.comp
  Function.funcToNum
  Function.numToFunc
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 loop-0.3.0@loop-0.3.0-4tGn4RSY02pFTwJ5L4CYRr
                      matrix-0.3.5.0@matrix-0.3.5.0-eFZR6K8Lax4OrNeuTQF4y
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  matrix-0.3.5.0@matrix-0.3.5.0-eFZR6K8Lax4OrNeuTQF4y:Data.Matrix 5430ea3ef630f5ccc165c3a4345028aa
37c70a555b27c69e363ced8849696a70
  $fOrdMatrix :: GHC.Classes.Ord (Data.Matrix.Matrix GHC.Types.Int)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Matrix.Matrix GHC.Types.Int)
                  Function.$fOrdMatrix_$cp1Ord
                  Function.$fOrdMatrix_$ccompare
                  Function.$fOrdMatrix_$c<
                  Function.$fOrdMatrix_$c<=
                  Function.$fOrdMatrix_$c>
                  Function.$fOrdMatrix_$c>=
                  Function.$fOrdMatrix_$cmax
                  Function.$fOrdMatrix_$cmin -}
a0a8ec609f3a904b5987ffd84eeb6dcf
  $fOrdMatrix1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
3ae34f95a4217e5d9a5a066c4ce97d7f
  $fOrdMatrix_$c< ::
    Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))><S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Matrix.Matrix GHC.Types.Int)
                   (y :: Data.Matrix.Matrix GHC.Types.Int) ->
                 case Function.$fOrdMatrix_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
091a12d1bea2737f963e90efd271fd43
  $fOrdMatrix_$c<= ::
    Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))><S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Matrix.Matrix GHC.Types.Int)
                   (y :: Data.Matrix.Matrix GHC.Types.Int) ->
                 case Function.$fOrdMatrix_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
318b5b359fc47c7eb3eb1de3dd93eb72
  $fOrdMatrix_$c> ::
    Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))><S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Matrix.Matrix GHC.Types.Int)
                   (y :: Data.Matrix.Matrix GHC.Types.Int) ->
                 case Function.$fOrdMatrix_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
8a58cc3e62f15956a709496cc6a7ea79
  $fOrdMatrix_$c>= ::
    Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))><S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Matrix.Matrix GHC.Types.Int)
                   (y :: Data.Matrix.Matrix GHC.Types.Int) ->
                 case Function.$fOrdMatrix_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
5215f7c0c5a9fb55530a52b29b9f1ed0
  $fOrdMatrix_$ccompare ::
    Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))><S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Matrix.Matrix GHC.Types.Int)
                   (w1 :: Data.Matrix.Matrix GHC.Types.Int) ->
                 case w of ww { Data.Matrix.M ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Data.Matrix.M ww8 ww9 ww10 ww11 ww12 ww13 ->
                 Function.$w$ccompare
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13 } }) -}
39c9abfa38fe7de315a67087dd123228
  $fOrdMatrix_$cmax ::
    Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),U(U,U,U,U,U,U(U,U,U))><S(SLLLLL),U(U,U,U,U,U,U(U,U,U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Matrix.Matrix GHC.Types.Int)
                   (y :: Data.Matrix.Matrix GHC.Types.Int) ->
                 case Function.$fOrdMatrix_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
b9cde672dd6ff0d83f0be6f5ee3140f6
  $fOrdMatrix_$cmin ::
    Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),U(U,U,U,U,U,U(U,U,U))><S(SLLLLL),U(U,U,U,U,U,U(U,U,U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Matrix.Matrix GHC.Types.Int)
                   (y :: Data.Matrix.Matrix GHC.Types.Int) ->
                 case Function.$fOrdMatrix_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
4fb23a3bd406e237c3946039a3fce367
  $fOrdMatrix_$cp1Ord ::
    GHC.Classes.Eq (Data.Matrix.Matrix GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Function.$fOrdMatrix_$s$fEqMatrix -}
d839f775383cb9e6571afe5fdda779e6
  $fOrdMatrix_$s$fEqMatrix ::
    GHC.Classes.Eq (Data.Matrix.Matrix GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Matrix.Matrix GHC.Types.Int)
                  (Data.Matrix.$fEqMatrix_$c== @ GHC.Types.Int GHC.Classes.$fEqInt)
                  Function.$fOrdMatrix_$s$fEqMatrix_$c/= -}
50131756b714004f7360e9b0b92d7b74
  $fOrdMatrix_$s$fEqMatrix_$c/= ::
    Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,U,U(U,A,U))><L,U(U,U,U,U,U,U(U,A,U))>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Matrix.Matrix GHC.Types.Int)
                   (y :: Data.Matrix.Matrix GHC.Types.Int) ->
                 GHC.Classes.not
                   (Data.Matrix.$fEqMatrix_$c==
                      @ GHC.Types.Int
                      GHC.Classes.$fEqInt
                      x
                      y)) -}
ed451bb56c48dbbc91ead4b10f02ddcd
  $fOrdMatrix_polySum ::
    [GHC.Types.Int] -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U)> -}
298bbbc1c7aea83838cceb3ce0176e2c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Function.$trModule2
                   Function.$trModule1) -}
641001d9f14526d75a0d938c7838c8ac
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Function"#) -}
9fe74c265e9eaf7ba9f6f795b11d2601
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "goglm4z3-0.1.0.0-PpXcM9zhE76KpKQN4wcQN"#) -}
25f9d33363c9d1d49db239b2bd11fe89
  $w$ccompare ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Vector.Vector GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Vector.Vector GHC.Types.Int
    -> GHC.Types.Ordering
  {- Arity: 12, HasNoCafRefs,
     Strictness: <S,U><L,U><L,U><L,U><L,U><L,U(U,A,U)><S,U><L,U><L,U><L,U><L,U><L,U(U,A,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: Data.Vector.Vector GHC.Types.Int)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: GHC.Prim.Int#)
                   (ww10 :: GHC.Prim.Int#)
                   (ww11 :: Data.Vector.Vector GHC.Types.Int) ->
                 case Function.$fOrdMatrix_polySum
                        (Data.Matrix.$wtoList @ GHC.Types.Int ww ww1 ww2 ww3 ww4 ww5)
                        Function.$fOrdMatrix1 of wild { GHC.Types.I# x# ->
                 case Function.$fOrdMatrix_polySum
                        (Data.Matrix.$wtoList @ GHC.Types.Int ww6 ww7 ww8 ww9 ww10 ww11)
                        Function.$fOrdMatrix1 of wild1 { GHC.Types.I# y# ->
                 GHC.Classes.compareInt# x# y# } }) -}
b5e5343680fd407c37e1b580dbcd6789
  $wcomp ::
    Data.Matrix.Matrix a
    -> Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int
    -> (# GHC.Prim.Int#, GHC.Prim.Int#, GHC.Prim.Int#, GHC.Prim.Int#,
          GHC.Prim.Int#, Data.Vector.Vector a #)
  {- Arity: 3,
     Strictness: <L,U(U,U,U,U,U,U(U,A,U))><L,U(U,U,U,U,U,U(U,A,U))><L,U(U,U,U,U,U,U(U,A,U))>,
     Inline: [0] -}
ecc1481f2bbbf379812d930e9bf024d9
  $wfuncToNum ::
    GHC.Num.Num t =>
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Vector.Vector t
    -> t
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,C(C1(U)),A,A,A,C(U))><S,U><L,U><L,U><L,U><L,U><L,U(U,A,U)>,
     Inline: [0],
     Unfolding: (\ @ t
                   (w :: GHC.Num.Num t)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: Data.Vector.Vector t) ->
                 let {
                   lvl16 :: t = GHC.Num.fromInteger @ t w Function.funcToNum2
                 } in
                 letrec {
                   polySum :: [t] -> t -> t {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ (ds :: [t]) (n :: t) ->
                     case ds of wild {
                       [] -> lvl16
                       : a ds1
                       -> case ds1 of wild1 {
                            [] -> a
                            : ipv ipv1
                            -> GHC.Num.+ @ t w (GHC.Num.* @ t w n (polySum wild1 n)) a } }
                 } in
                 polySum
                   (Data.Matrix.$wtoList @ t ww ww1 ww2 ww3 ww4 ww5)
                   (GHC.Num.fromInteger @ t w Function.funcToNum1)) -}
2fa3305eacb2fcf66ec128c4efb299b2
  $wnumToFunc ::
    GHC.Real.Integral a =>
    a
    -> (# GHC.Prim.Int#, GHC.Prim.Int#, GHC.Prim.Int#, GHC.Prim.Int#,
          GHC.Prim.Int#, Data.Vector.Vector a #)
  {- Arity: 2,
     Strictness: <L,U(U,A,A,C(C1(U)),C(C1(U)),A,A,A,A)><L,U>,
     Inline: [0] -}
278f004bc7d4227b7f02c5963b682c71
  comp ::
    Data.Matrix.Matrix a
    -> Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix GHC.Types.Int
    -> Data.Matrix.Matrix a
  {- Arity: 3,
     Strictness: <L,U(U,U,U,U,U,U(U,A,U))><L,U(U,U,U,U,U,U(U,A,U))><L,U(U,U,U,U,U,U(U,A,U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: Data.Matrix.Matrix a)
                   (w1 :: Data.Matrix.Matrix GHC.Types.Int)
                   (w2 :: Data.Matrix.Matrix GHC.Types.Int) ->
                 case Function.$wcomp
                        @ a
                        w
                        w1
                        w2 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Data.Matrix.M @ a ww1 ww2 ww3 ww4 ww5 ww6 }) -}
0d28555734ba144c2b7db31255f31b02
  funcToNum :: GHC.Num.Num t => Data.Matrix.Matrix t -> t
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,C(C1(U)),A,A,A,C(U))><S(SLLLLL),1*U(U,U,U,U,U,U(U,A,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ t (w :: GHC.Num.Num t) (w1 :: Data.Matrix.Matrix t) ->
                 case w1 of ww { Data.Matrix.M ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Function.$wfuncToNum @ t w ww1 ww2 ww3 ww4 ww5 ww6 }) -}
1fd0153de18cd32552583f5940e748e6
  funcToNum1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
ec7a5fafcd695999a9640316c0b6ce9f
  funcToNum2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
14bcd278600f76307d2c5b1c10d22bf2
  numToFunc :: GHC.Real.Integral a => a -> Data.Matrix.Matrix a
  {- Arity: 2,
     Strictness: <L,U(U,A,A,C(C1(U)),C(C1(U)),A,A,A,A)><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Real.Integral a) (w1 :: a) ->
                 case Function.$wnumToFunc
                        @ a
                        w
                        w1 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Data.Matrix.M @ a ww1 ww2 ww3 ww4 ww5 ww6 }) -}
instance GHC.Classes.Ord [Data.Matrix.Matrix]
  = Function.$fOrdMatrix
"SPEC/Function $fEqMatrix @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                            GHC.Types.Int)
  Data.Matrix.$fEqMatrix @ GHC.Types.Int $dEq
  = Function.$fOrdMatrix_$s$fEqMatrix
"SPEC/Function $fEqMatrix_$c/= @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                 GHC.Types.Int)
  Data.Matrix.$fEqMatrix_$c/= @ GHC.Types.Int $dEq
  = Function.$fOrdMatrix_$s$fEqMatrix_$c/=
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


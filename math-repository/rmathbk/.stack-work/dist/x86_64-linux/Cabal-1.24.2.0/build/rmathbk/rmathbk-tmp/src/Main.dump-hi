
==================== FINAL INTERFACE ====================
2017-05-11 16:19:38.74383545 UTC

interface main@main:Main 8002
  interface hash: 8122abe8ec13d79c5c00a49c243d3ad3
  ABI hash: 6490b5999545f42e0d5f589f68544737
  export-list hash: 382d32e95c3298578edc1aa8a0c0934f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 52c5f0a413070c2b2419bd0fe0fe2eda
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.createHandler
  Main.echoHandler
  Main.main
  Main.site
  Main.staticdir
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-149sKSjRQXt1eo4orvbms1
                      base-4.9.1.0 binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CHCuxDJaC37LXaq0Zrx3Kf
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.9@case-insensitive-1.2.0.9-9PPjZSWX26rHTfSEllBMiX
                      clock-0.7.2@clock-0.7.2-6ZjQ4liQAtMEQ8sxJKD0xY
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-ADsVFnf0mYuIGc33PNm4mR
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-DnHEvsScT075FQWguSn538
                      io-streams-1.3.6.1@io-streams-1.3.6.1-4aLOCF1vWjT2jfvW7nMfwa
                      io-streams-haproxy-1.0.0.1@io-streams-haproxy-1.0.0.1-10yBF4vB6suK0QzAEu7Ife
                      lifted-base-0.2.3.10@lifted-base-0.2.3.10-ILgqYNMTYzz38p8nUW9oQ6
                      monad-control-1.0.1.0@monad-control-1.0.1.0-DfEdyINcb8eLXTmDHmTN7J
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      readable-0.3.1@readable-0.3.1-7FSnLl6NSCfINHVPwOGo9q
                      scientific-0.3.4.12@scientific-0.3.4.12-5Xr2KUfqmy25ULPuLkfrhy
                      snap-core-1.0.2.0@snap-core-1.0.2.0-H9XKASfChKSIKWeal4J4OB
                      snap-server-1.0.2.0@snap-server-1.0.2.0-AAdQbtjAzkC7l7OPgJygJO
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-3He1TF3rGvT5F5jDQb7kpc
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-4UGk5Lzx1jh6odMZdBsQG0
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-DdtblIYZVYh4wkJ54DqKSm
                      vector-0.12.0.1@vector-0.12.0.1-KNR9LPrtqAM8g8hxCKOTgj
                      zlib-0.6.1.2@zlib-0.6.1.2-BfeUVhBVvrx1Nvtzv6OD9c
                      zlib-bindings-0.1.1.5@zlib-bindings-0.1.1.5-89JnZByK0a34BXtS4I1nn1
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-149sKSjRQXt1eo4orvbms1:Data.Attoparsec.ByteString.Char8
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-ADsVFnf0mYuIGc33PNm4mR:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe:Network.Socket
         snap-core-1.0.2.0@snap-core-1.0.2.0-H9XKASfChKSIKWeal4J4OB:Snap.Internal.Instances
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-KNR9LPrtqAM8g8hxCKOTgj:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-KNR9LPrtqAM8g8hxCKOTgj:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-149sKSjRQXt1eo4orvbms1:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         clock-0.7.2@clock-0.7.2-6ZjQ4liQAtMEQ8sxJKD0xY:System.Clock
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         monad-control-1.0.1.0@monad-control-1.0.1.0-DfEdyINcb8eLXTmDHmTN7J:Control.Monad.Trans.Control
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         snap-core-1.0.2.0@snap-core-1.0.2.0-H9XKASfChKSIKWeal4J4OB:Snap.Internal.Core
                         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text
                         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-DdtblIYZVYh4wkJ54DqKSm:Data.HashMap.Base
                         vector-0.12.0.1@vector-0.12.0.1-KNR9LPrtqAM8g8hxCKOTgj:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-KNR9LPrtqAM8g8hxCKOTgj:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-KNR9LPrtqAM8g8hxCKOTgj:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-KNR9LPrtqAM8g8hxCKOTgj:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-BfeUVhBVvrx1Nvtzv6OD9c:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  snap-core-1.0.2.0@snap-core-1.0.2.0-H9XKASfChKSIKWeal4J4OB:Snap.Core fab12b624121e49e33325d9ac751277e
import  -/  snap-core-1.0.2.0@snap-core-1.0.2.0-H9XKASfChKSIKWeal4J4OB:Snap.Internal.Core 017a84b937a7ee914f974505a774d647
import  -/  snap-core-1.0.2.0@snap-core-1.0.2.0-H9XKASfChKSIKWeal4J4OB:Snap.Internal.Routing 2a5a827f911713e968af87ffe6bdb590
import  -/  snap-core-1.0.2.0@snap-core-1.0.2.0-H9XKASfChKSIKWeal4J4OB:Snap.Internal.Util.FileServe 0b8643f987a8c1b286bfff0b247f5cc2
import  -/  snap-core-1.0.2.0@snap-core-1.0.2.0-H9XKASfChKSIKWeal4J4OB:Snap.Util.FileServe 8d79a4126ec75d9ecafbad39ad2bafe0
import  -/  snap-server-1.0.2.0@snap-server-1.0.2.0-AAdQbtjAzkC7l7OPgJygJO:Snap.Http.Server 67cabbc1e07e0a5dfd741d60ea2cf1a9
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
69760a0076e0ec171ba16349824c1ced
  $wechoHandler ::
    (() -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
    -> (Snap.Internal.Core.Zero
        -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.Bool
    -> Snap.Types.Headers.Headers
    -> System.IO.Streams.Internal.InputStream
         Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe GHC.Word.Word64
    -> Snap.Internal.Http.Types.Method
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Snap.Internal.Http.Types.Cookie]
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Snap.Internal.Http.Types.Params
    -> Snap.Internal.Http.Types.Params
    -> Snap.Internal.Http.Types.Params
    -> Snap.Internal.Http.Types.Response
    -> (Data.ByteString.Internal.ByteString -> GHC.Types.IO ())
    -> ((GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.IO ())
    -> GHC.Types.IO r
  {- Arity: 26,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ r
                   (w :: () -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
                   (w1 :: Snap.Internal.Core.Zero
                          -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
                   (ww :: Data.ByteString.Internal.ByteString)
                   (ww1 :: Data.ByteString.Internal.ByteString)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Data.ByteString.Internal.ByteString)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: Data.ByteString.Internal.ByteString)
                   (ww6 :: GHC.Types.Bool)
                   (ww7 :: Snap.Types.Headers.Headers)
                   (ww8 :: System.IO.Streams.Internal.InputStream
                             Data.ByteString.Internal.ByteString)
                   (ww9 :: GHC.Base.Maybe GHC.Word.Word64)
                   (ww10 :: Snap.Internal.Http.Types.Method)
                   (ww11 :: GHC.Types.Int)
                   (ww12 :: GHC.Types.Int)
                   (ww13 :: [Snap.Internal.Http.Types.Cookie])
                   (ww14 :: Data.ByteString.Internal.ByteString)
                   (ww15 :: Data.ByteString.Internal.ByteString)
                   (ww16 :: Data.ByteString.Internal.ByteString)
                   (ww17 :: Data.ByteString.Internal.ByteString)
                   (ww18 :: Snap.Internal.Http.Types.Params)
                   (ww19 :: Snap.Internal.Http.Types.Params)
                   (ww20 :: Snap.Internal.Http.Types.Params)
                   (ww21 :: Snap.Internal.Http.Types.Response)
                   (ww22 :: Data.ByteString.Internal.ByteString -> GHC.Types.IO ())
                   (ww23 :: (GHC.Types.Int -> GHC.Types.Int) -> GHC.Types.IO ()) ->
                 case Main.echoHandler_eta of ww24 { Data.ByteString.Internal.PS ww25 ww26 ww27 ww28 ->
                 case Snap.Internal.Http.Types.$wpoly_go10
                        @ [Data.ByteString.Internal.ByteString]
                        ww25
                        ww26
                        ww27
                        ww28
                        ww18 of wild {
                   GHC.Base.Nothing
                   -> Main.echoHandler4 `cast` (Snap.Internal.Core.N:Snap[0] <()>_R)
                        @ r
                        w
                        w1
                        (Snap.Internal.Core.SnapState
                           (Snap.Internal.Http.Types.Request
                              ww
                              ww1
                              ww2
                              ww3
                              ww4
                              ww5
                              ww6
                              ww7
                              ww8
                              ww9
                              ww10
                              ww11
                              ww12
                              ww13
                              ww14
                              ww15
                              ww16
                              ww17
                              ww18
                              ww19
                              ww20)
                           ww21
                           ww22
                           ww23)
                   GHC.Base.Just x2
                   -> let {
                        x3 :: Data.ByteString.Internal.ByteString
                        = case x2 of wild1 {
                            [] -> Main.echoHandler3
                            : x4 xs
                            -> Data.ByteString.Internal.$fMonoidByteString_$cmconcat
                                 (GHC.Types.:
                                    @ Data.ByteString.Internal.ByteString
                                    x4
                                    (Data.OldList.prependToAll
                                       @ Data.ByteString.Internal.ByteString
                                       Main.echoHandler2
                                       xs)) }
                      } in
                      let {
                        $weta3 :: forall r1.
                                  Data.ByteString.Builder.Internal.BuildStep r1
                                  -> GHC.Prim.Addr#
                                  -> GHC.Prim.Addr#
                                  -> GHC.Prim.State# GHC.Prim.RealWorld
                                  -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.ByteString.Builder.Internal.BuildSignal r1 #)
                          {- Arity: 4, Strictness: <S,1*U><L,U><L,U><S,U>, Inline: [0] -}
                        = \ @ r1
                            (w2 :: Data.ByteString.Builder.Internal.BuildStep r1)
                            (ww29 :: GHC.Prim.Addr#)
                            (ww30 :: GHC.Prim.Addr#)
                            (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case x3 of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                          case w2 of k1 { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# dt3 8160#) of wild2 {
                            GHC.Types.False
                            -> (# w3,
                                  Data.ByteString.Builder.Internal.InsertChunk @ r1 ww29 wild1 k1 #)
                            GHC.Types.True
                            -> let {
                                 op' :: GHC.Prim.Addr# = GHC.Prim.plusAddr# ww29 dt3
                               } in
                               let {
                                 ip :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt dt2
                               } in
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leAddr# op' ww30) of wild3 {
                                 GHC.Types.False
                                 -> Data.ByteString.Builder.Internal.$wwrappedBytesCopyStep
                                      @ r1
                                      ip
                                      (GHC.Prim.plusAddr# ip dt3)
                                      (\ (br1 :: Data.ByteString.Builder.Internal.BufferRange)
                                         (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.touch#
                                              @ 'GHC.Types.PtrRepLifted
                                              @ GHC.ForeignPtr.ForeignPtrContents
                                              dt1
                                              eta2 of s' { DEFAULT ->
                                       (k1 br1)
                                         `cast`
                                       (GHC.Types.N:IO[0]
                                            <Data.ByteString.Builder.Internal.BuildSignal r1>_R)
                                         s' })
                                        `cast`
                                      (<Data.ByteString.Builder.Internal.BufferRange>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     <Data.ByteString.Builder.Internal.BuildSignal
                                                        r1>_R))
                                      ww29
                                      ww30
                                      w3
                                 GHC.Types.True
                                 -> case {__pkg_ccall base-4.9.1.0 memcpy GHC.Prim.Addr#
                                                                          -> GHC.Prim.Addr#
                                                                          -> GHC.Prim.Word#
                                                                          -> GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                          -> (# GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld,
                                                                                GHC.Prim.Addr# #)}
                                           ww29
                                           ip
                                           (GHC.Prim.int2Word# dt3)
                                           w3 of wild5 { (#,#) ds4 ds5 ->
                                    case GHC.Prim.touch#
                                           @ 'GHC.Types.PtrRepLifted
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt1
                                           ds4 of s' { DEFAULT ->
                                    (k1 (Data.ByteString.Builder.Internal.BufferRange op' ww30))
                                      `cast`
                                    (GHC.Types.N:IO[0]
                                         <Data.ByteString.Builder.Internal.BuildSignal r1>_R)
                                      s' } } } } } }
                      } in
                      let {
                        eta2 :: forall r1.
                                Data.ByteString.Builder.Internal.BuildStep r1
                                -> Data.ByteString.Builder.Internal.BufferRange
                                -> GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      Data.ByteString.Builder.Internal.BuildSignal r1 #)
                          {- Arity: 3, Strictness: <S,1*U><S,1*U(U,U)><S,U>,
                             Inline: INLINE[0],
                             Unfolding: InlineRule (3, True, False)
                                        (\ @ r1
                                           (w2 :: Data.ByteString.Builder.Internal.BuildStep r1)
                                           (w3 :: Data.ByteString.Builder.Internal.BufferRange)
                                           (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                         case w3 of ww29 { Data.ByteString.Builder.Internal.BufferRange ww30 ww31 ->
                                         $weta3 @ r1 w2 ww30 ww31 w4 }) -}
                        = \ @ r1
                            (w2 :: Data.ByteString.Builder.Internal.BuildStep r1)
                            (w3 :: Data.ByteString.Builder.Internal.BufferRange)
                            (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case w3 of ww29 { Data.ByteString.Builder.Internal.BufferRange ww30 ww31 ->
                          $weta3 @ r1 w2 ww30 ww31 w4 }
                      } in
                      let {
                        lvl27 :: GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
                        = GHC.Base.Just
                            @ Data.ByteString.Builder.Internal.Builder
                            eta2
                              `cast`
                            (Trans
                                 (forall (r1 :: <*>_N).
                                  <Data.ByteString.Builder.Internal.BuildStep r1>_R
                                  ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <Data.ByteString.Builder.Internal.BuildSignal
                                                   r1>_R))
                                 (Sym (Data.ByteString.Builder.Internal.N:Builder[0])))
                      } in
                      (Snap.Internal.Core.addToOutput
                         @ Snap.Internal.Core.Snap
                         Snap.Internal.Core.$fMonadSnapSnap
                         (\ (str :: System.IO.Streams.Internal.OutputStream
                                      Data.ByteString.Builder.Internal.Builder)
                            (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case str of wild1 { System.IO.Streams.Internal.OutputStream ds1 ->
                          case (ds1 lvl27) `cast` (GHC.Types.N:IO[0] <()>_R)
                                 s of ds2 { (#,#) ipv ipv1 ->
                          (# ipv, wild1 #) } })
                           `cast`
                         (<System.IO.Streams.Internal.OutputStream
                             Data.ByteString.Builder.Internal.Builder>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <System.IO.Streams.Internal.OutputStream
                                           Data.ByteString.Builder.Internal.Builder>_R)))
                        `cast`
                      (Snap.Internal.Core.N:Snap[0] <()>_R)
                        @ r
                        w
                        w1
                        (Snap.Internal.Core.SnapState
                           (Snap.Internal.Http.Types.Request
                              ww
                              ww1
                              ww2
                              ww3
                              ww4
                              ww5
                              ww6
                              ww7
                              ww8
                              ww9
                              ww10
                              ww11
                              ww12
                              ww13
                              ww14
                              ww15
                              ww16
                              ww17
                              ww18
                              ww19
                              ww20)
                           ww21
                           ww22
                           ww23) } }) -}
5716bc551218e6e895f703131dc092ed
  $weta ::
    Data.ByteString.Builder.Internal.BuildStep r
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 4, Strictness: <S,1*U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ @ r
                   (w :: Data.ByteString.Builder.Internal.BuildStep r)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Addr#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Main.echoHandler_x of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 case w of k1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# dt3 8160#) of wild2 {
                   GHC.Types.False
                   -> (# w1,
                         Data.ByteString.Builder.Internal.InsertChunk @ r ww wild k1 #)
                   GHC.Types.True
                   -> let {
                        op' :: GHC.Prim.Addr# = GHC.Prim.plusAddr# ww dt3
                      } in
                      let {
                        ip :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt dt2
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leAddr# op' ww1) of wild3 {
                        GHC.Types.False
                        -> Data.ByteString.Builder.Internal.$wwrappedBytesCopyStep
                             @ r
                             ip
                             (GHC.Prim.plusAddr# ip dt3)
                             (\ (br1 :: Data.ByteString.Builder.Internal.BufferRange)
                                (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.touch#
                                     @ 'GHC.Types.PtrRepLifted
                                     @ GHC.ForeignPtr.ForeignPtrContents
                                     dt1
                                     eta2 of s' { DEFAULT ->
                              (k1 br1)
                                `cast`
                              (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                s' })
                               `cast`
                             (<Data.ByteString.Builder.Internal.BufferRange>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                             ww
                             ww1
                             w1
                        GHC.Types.True
                        -> case {__pkg_ccall base-4.9.1.0 memcpy GHC.Prim.Addr#
                                                                 -> GHC.Prim.Addr#
                                                                 -> GHC.Prim.Word#
                                                                 -> GHC.Prim.State#
                                                                      GHC.Prim.RealWorld
                                                                 -> (# GHC.Prim.State#
                                                                         GHC.Prim.RealWorld,
                                                                       GHC.Prim.Addr# #)}
                                  ww
                                  ip
                                  (GHC.Prim.int2Word# dt3)
                                  w1 of wild1 { (#,#) ds4 ds5 ->
                           case GHC.Prim.touch#
                                  @ 'GHC.Types.PtrRepLifted
                                  @ GHC.ForeignPtr.ForeignPtrContents
                                  dt1
                                  ds4 of s' { DEFAULT ->
                           (k1 (Data.ByteString.Builder.Internal.BufferRange op' ww1))
                             `cast`
                           (GHC.Types.N:IO[0]
                                <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                             s' } } } } } }) -}
20c13fd64626bdd592e99dd4a23fe67e
  createHandler :: Snap.Internal.Core.Snap ()
  {- Arity: 3,
     Strictness: <C(C(S)),1*C1(C1(U))><L,A><L,1*U(U,1*U(U,U,U,A,U,U,U),U,U)>,
     Unfolding: InlineRule (0, True, True)
                Main.createHandler1
                  `cast`
                (Sym (Snap.Internal.Core.N:Snap[0] <()>_R)) -}
9c10c64f6da5121892bf1f1d67a26d0c
  createHandler1 ::
    (() -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
    -> (Snap.Internal.Core.Zero
        -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
    -> Snap.Internal.Core.SnapState
    -> GHC.Types.IO r
  {- Arity: 3,
     Strictness: <C(C(S)),1*C1(C1(U))><L,A><L,1*U(U,1*U(U,U,U,A,U,U,U),U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ r
                   (sk :: () -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
                   (ds2 :: Snap.Internal.Core.Zero
                           -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
                   (st :: Snap.Internal.Core.SnapState) ->
                 sk
                   GHC.Tuple.()
                   (case st of wild { Snap.Internal.Core.SnapState ds3 ds4 ds5 ds6 ->
                    Snap.Internal.Core.SnapState
                      ds3
                      (case ds4 of wild1 { Snap.Internal.Http.Types.Response ds7 ds8 ds9 ds10 dt ds11 ds12 ->
                       Snap.Internal.Http.Types.Response
                         ds7
                         ds8
                         ds9
                         Main.createHandler_lvl45
                         dt
                         ds11
                         ds12 })
                      ds5
                      ds6 })) -}
5781df07500c4d8371bd0faa74a46d88
  createHandler2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/html/create.html"#) -}
6e3c815cd1b026db4215ca23de8ca50a
  createHandler_f :: GHC.IO.FilePath
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Main.staticdir
                   Main.createHandler2) -}
c2ab10584a4cc35ac852a9d652719092
  createHandler_lvl45 :: Snap.Internal.Http.Types.ResponseBody
  {- Strictness: m2,
     Unfolding: (Snap.Internal.Http.Types.SendFile
                   Main.createHandler_f
                   (GHC.Base.Nothing @ (GHC.Word.Word64, GHC.Word.Word64))) -}
a6e0c0f6c4a78c0882659c4023e85d95
  echoHandler :: Snap.Internal.Core.Snap ()
  {- Arity: 3,
     Strictness: <L,U><L,U><S(S(LLLLLLLLLLLLLLLLLLSLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Main.echoHandler1
                  `cast`
                (Sym (Snap.Internal.Core.N:Snap[0] <()>_R)) -}
87cef6872db0f4ff4ee0dd323eebc7f3
  echoHandler1 ::
    (() -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
    -> (Snap.Internal.Core.Zero
        -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
    -> Snap.Internal.Core.SnapState
    -> GHC.Types.IO r
  {- Arity: 3,
     Strictness: <L,U><L,U><S(S(LLLLLLLLLLLLLLLLLLSLL)LLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ r
                   (w :: () -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
                   (w1 :: Snap.Internal.Core.Zero
                          -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
                   (w2 :: Snap.Internal.Core.SnapState) ->
                 case w2 of ww { Snap.Internal.Core.SnapState ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Snap.Internal.Http.Types.Request ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ->
                 Main.$wechoHandler
                   @ r
                   w
                   w1
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww2
                   ww3
                   ww4 } }) -}
8eac6186b85281d5def7a535210da368
  echoHandler2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = " "#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
a78d0c2e4553903c14be10706badbeef
  echoHandler3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (Data.ByteString.Internal.$fMonoidByteString_$cmconcat
                   (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) -}
b80d96687cb2b2579114ee966267d16e
  echoHandler4 :: Snap.Internal.Core.Snap ()
  {- Unfolding: (Snap.Internal.Core.addToOutput
                   @ Snap.Internal.Core.Snap
                   Snap.Internal.Core.$fMonadSnapSnap
                   Main.echoHandler5
                     `cast`
                   (<System.IO.Streams.Internal.OutputStream
                       Data.ByteString.Builder.Internal.Builder>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <System.IO.Streams.Internal.OutputStream
                                     Data.ByteString.Builder.Internal.Builder>_R))) -}
5b7419d03328d675b7c8be63bbe71bbd
  echoHandler5 ::
    System.IO.Streams.Internal.OutputStream
      Data.ByteString.Builder.Internal.Builder
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          System.IO.Streams.Internal.OutputStream
            Data.ByteString.Builder.Internal.Builder #)
  {- Arity: 2,
     Unfolding: (\ (str :: System.IO.Streams.Internal.OutputStream
                             Data.ByteString.Builder.Internal.Builder)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case str of wild { System.IO.Streams.Internal.OutputStream ds1 ->
                 case (ds1 Main.echoHandler6) `cast` (GHC.Types.N:IO[0] <()>_R)
                        s of ds2 { (#,#) ipv ipv1 ->
                 (# ipv, wild #) } }) -}
a2a889629710d542b8f7a0603320aaa9
  echoHandler6 ::
    GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Unfolding: (GHC.Base.Just
                   @ Data.ByteString.Builder.Internal.Builder
                   Main.echoHandler7
                     `cast`
                   (Trans
                        (forall (r :: <*>_N).
                         <Data.ByteString.Builder.Internal.BuildStep r>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                        (Sym (Data.ByteString.Builder.Internal.N:Builder[0])))) -}
4f293086293cf33329c1bbe62e1303ab
  echoHandler7 ::
    Data.ByteString.Builder.Internal.BuildStep r
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, Strictness: <S,1*U><S,1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ r
                   (w :: Data.ByteString.Builder.Internal.BuildStep r)
                   (w1 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Main.$weta @ r w ww1 ww2 w2 }) -}
63bfb5b4310c31667f4808ed11db1cca
  echoHandler_eta :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "echoparam"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
ff197bcd4f31f3c3daffb948805cec7a
  echoHandler_x :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "must specify echo/param in URL"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
1f78b16cca9794a75c0c11ee4a608856
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
6a921fbb25572410687c1411b885d640
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Snap.Http.Server.quickHttpServe2
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Snap.Internal.Http.Server.Config.Config
                              Snap.Internal.Core.Snap GHC.Prim.Any>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 Snap.Http.Server.httpServe1
                   @ GHC.Prim.Any
                   ipv1
                   Main.main2 `cast` (Sym (Snap.Internal.Core.N:Snap[0] <()>_R))
                   ipv }) -}
243df494e259325f5a0fc7abe34df147
  main2 ::
    (() -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
    -> (Snap.Internal.Core.Zero
        -> Snap.Internal.Core.SnapState -> GHC.Types.IO r)
    -> Snap.Internal.Core.SnapState
    -> GHC.Types.IO r
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
522e44e68014876904b139e866aad0fb
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
33743f57cbe22c2b3431ee916a6f3637
  site :: Snap.Internal.Core.Snap ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2 `cast` (Sym (Snap.Internal.Core.N:Snap[0] <()>_R)) -}
64ca714fd4f8159fef1a2848c9ccca3b
  staticdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString# "src/static"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


name: ad
version: 4.3.2.1
id: ad-4.3.2.1-B4YKx5LBvJgFtLezBtz4ks
key: B4YKx5LBvJgFtLezBtz4ks
license: BSD3
copyright: (c) Edward Kmett 2010-2015,
           (c) Barak Pearlmutter and Jeffrey Mark Siskind 2008-2009
maintainer: ekmett@gmail.com
stability: Experimental
homepage: http://github.com/ekmett/ad
synopsis: Automatic Differentiation
description:
    Forward-, reverse- and mixed- mode automatic differentiation combinators with a common API.
    .
    Type-level \"branding\" is used to both prevent the end user from confusing infinitesimals
    and to limit unsafe access to the implementation details of each Mode.
    .
    Each mode has a separate module full of combinators.
    .
    * @Numeric.AD.Mode.Forward@ provides basic forward-mode AD. It is good for computing simple derivatives.
    .
    * @Numeric.AD.Mode.Reverse@ uses benign side-effects to compute reverse-mode AD. It is good for computing gradients in one pass. It generates a Wengert list (linear tape) using @Data.Reflection@.
    .
    * @Numeric.AD.Mode.Kahn@ uses benign side-effects to compute reverse-mode AD. It is good for computing gradients in one pass. It generates a tree-like tape that needs to be topologically sorted in the end.
    .
    * @Numeric.AD.Mode.Sparse@ computes a sparse forward-mode AD tower. It is good for higher derivatives or large numbers of outputs.
    .
    * @Numeric.AD.Mode.Tower@ computes a dense forward-mode AD tower useful for higher derivatives of single input functions.
    .
    * @Numeric.AD@ computes using whichever mode or combination thereof is suitable to each individual combinator.
    .
    While not every mode can provide all operations, the following basic operations are supported, modified as
    appropriate by the suffixes below:
    .
    * 'grad' computes the gradient (partial derivatives) of a function at a point.
    .
    * 'jacobian' computes the Jacobian matrix of a function at a point.
    .
    * 'diff' computes the derivative of a function at a point.
    .
    * 'du' computes a directional derivative of a function at a point.
    .
    * 'hessian' computes the Hessian matrix (matrix of second partial derivatives) of a function at a point.
    .
    The following suffixes alter the meanings of the functions above as follows:
    .
    * @\'@ -- also return the answer
    .
    * @With@ lets the user supply a function to blend the input with the output
    .
    * @F@ is a version of the base function lifted to return a 'Traversable' (or 'Functor') result
    .
    * @s@ means the function returns all higher derivatives in a list or f-branching 'Stream'
    .
    * @T@ means the result is transposed with respect to the traditional formulation.
    .
    * @0@ means that the resulting derivative list is padded with 0s at the end.
    .
    * @NoEq@ means that an infinite list of converging values is returned rather than truncating the list when they become constant
category: Math
author: Edward Kmett
exposed: True
exposed-modules:
    Numeric.AD Numeric.AD.Halley Numeric.AD.Internal.Dense
    Numeric.AD.Internal.Forward Numeric.AD.Internal.Forward.Double
    Numeric.AD.Internal.Identity Numeric.AD.Internal.Kahn
    Numeric.AD.Internal.On Numeric.AD.Internal.Or
    Numeric.AD.Internal.Reverse Numeric.AD.Internal.Sparse
    Numeric.AD.Internal.Tower Numeric.AD.Internal.Type
    Numeric.AD.Jacobian Numeric.AD.Jet Numeric.AD.Mode
    Numeric.AD.Mode.Forward Numeric.AD.Mode.Forward.Double
    Numeric.AD.Mode.Kahn Numeric.AD.Mode.Reverse Numeric.AD.Mode.Sparse
    Numeric.AD.Mode.Tower Numeric.AD.Newton Numeric.AD.Newton.Double
    Numeric.AD.Rank1.Forward Numeric.AD.Rank1.Forward.Double
    Numeric.AD.Rank1.Halley Numeric.AD.Rank1.Kahn
    Numeric.AD.Rank1.Newton Numeric.AD.Rank1.Newton.Double
    Numeric.AD.Rank1.Sparse Numeric.AD.Rank1.Tower
hidden-modules: Numeric.AD.Internal.Combinators
trusted: False
import-dirs: /home/darclaw/projects/math/rth-derivitave/.cabal-sandbox/lib/x86_64-linux-ghc-7.10.3/ad-4.3.2.1-B4YKx5LBvJgFtLezBtz4ks
library-dirs: /home/darclaw/projects/math/rth-derivitave/.cabal-sandbox/lib/x86_64-linux-ghc-7.10.3/ad-4.3.2.1-B4YKx5LBvJgFtLezBtz4ks
              /home/darclaw/projects/math/rth-derivitave/.cabal-sandbox/lib/x86_64-linux-ghc-7.10.3
data-dir: /home/darclaw/projects/math/rth-derivitave/.cabal-sandbox/share/x86_64-linux-ghc-7.10.3/ad-4.3.2.1
hs-libraries: HSad-4.3.2.1-B4YKx5LBvJgFtLezBtz4ks
depends:
    array-0.5.1.0-960bf9ae8875cc30355e086f8853a049
    base-4.8.2.0-0d6d1084fbc041e1cded9228e80e264d
    comonad-5-9lYvF5dbUSnKHXx6DhU65J
    containers-0.5.6.2-59326c33e30ec8f6afd574cbac625bbb
    data-reify-0.6.1-Fud0SJPRivlKnWAeDcScy2
    erf-2.0.0.0-1rxLu4a2pldLKAVp48ZDG4
    free-4.12.4-7gAhA11PpxU1UnLpkr6y2A
    nats-1.1.1-BNyrdccFwtDCnPVRYXNFy6
    reflection-2.1.2-BEgrOCAAPXJAmy8gTgJoX8
    transformers-0.4.2.0-81450cd8f86b36eaa8fa0cbaf6efc3a3
haddock-interfaces: /home/darclaw/projects/math/rth-derivitave/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.10.3/ad-4.3.2.1/html/ad.haddock
haddock-html: /home/darclaw/projects/math/rth-derivitave/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.10.3/ad-4.3.2.1/html
